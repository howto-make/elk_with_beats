---
apiVersion: v1
kind: ConfigMap
metadata:
  name: heartbeat-deployment-config
  namespace: kube-system
  labels:
    k8s-app: heartbeat-logging
data:
  heartbeat.yml: |-
    setup.template.settings:
      index.number_of_shards: 1
      index.codec: best_compression
    heartbeat.config.monitors:
      path: ${path.config}/monitors.d/*.yml
      reload.enabled: false
      reload.period: 5s
    heartbeat.monitors:
    - type: icmp
      schedule: '@every 5s'
      hosts:
        - "www.elastic.co"
        - "discuss.elastic.co"
        - "www.google.com"
        - "localhost"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "http://www.elastic.co"
      check.response.status: 301

      ipv4: true
      ipv6: true
      mode: any

    - type: tcp
      schedule: '@every 30s'
      hosts:
        - "8.8.8.8:53"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "http://frontend.guestbook.svc.cluster.local"
        - "https://www.google.com"
        - "http://www.google.com"
        - "https://discuss.elastic.co"
        - "https://www.elastic.co"
        - "https://demo.elastic.co"
        - "http://fake.elastic.co"
        - "https://github.com/elastic/kibana"
      check.response.status: 200

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "https://www.elastic.co/solutions/apm"
      check.response:
        status: 200
        body: "Open Source Application Performance Monitoring"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "https://www.elastic.co/solutions/apm"
      check.response:
        status: 200
        body: "Not there"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 1s'
      urls:
        - "https://www.elastic.co/solutions/security-analytics"
      check.response:
        body: "Can't find this"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "https://www.elastic.co/solutions/security-analytics"
      check.response:
        body: "Threats don't follow templates"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 1s'
      urls:
        - "https://www.elastic.co/products/beats/heartbeat"
      check.response:
        body: "Lightweight Shipper for Uptime Monitoring!"
        status: 200

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 5s'
      urls:
        - "https://www.elastic.co/use-cases/"
      check.response:
        body: "Stories from Users Like YouXX"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      schedule: '@every 6s'
      urls:
        - "https://www.elastic.co/use-cases/"
      check.response:
        body: "Stories from Users Like You"

      ipv4: true
      ipv6: true
      mode: any

    - type: http
      name: My Monitor
      urls:
        - "http://10.5.35.226:31335"
      schedule: '@every 10s'

      ipv4: true
      ipv6: true
      mode: any

    heartbeat.scheduler:

    cloud.auth: ${ELASTIC_CLOUD_AUTH}
    cloud.id: ${ELASTIC_CLOUD_ID}

    output.elasticsearch:
      hosts: 'http://10.5.35.226:31335'
      username: elastic
      password: changeme
    setup.kibana:
      host: 'http://10.5.35.226:31336'
    setup.dashboards.enabled: true
    setup.dashboard.always_kibana: false
    setup.dashboard.retry.enabled: true
    setup.dashboard.retry.interval: 1s
    setup.dashboard.retry.maximum: 30s

    processors:
      - add_cloud_metadata:
      - add_locale:
          format: offset    
      - add_kubernetes_metadata:
          host: ${HOSTNAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'
              # with version 7 of Packetbeat use the following line instead of the one above.
              #format: '%{[destination.ip]}:%{[destination.port]}'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heartbeat-logging
  namespace: kube-system
  labels:
    k8s-app: heartbeat-logging
spec:
  selector:
    matchLabels:
      k8s-app: heartbeat-logging
  template:
    metadata:
      labels:
        k8s-app: heartbeat-logging
    spec:
      serviceAccountName: heartbeat-logging
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: heartbeat-logging
        image: docker.elastic.co/beats/heartbeat:6.2.2
        imagePullPolicy: IfNotPresent
        args: [
          "-c", "/etc/heartbeat.yml",
          "-e",
        ]
        env:
        - name: ELASTIC_CLOUD_ID
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: ELASTIC_CLOUD_ID
              optional: true
        - name: ELASTIC_CLOUD_AUTH
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: ELASTIC_CLOUD_AUTH
              optional: true
        - name: ELASTICSEARCH_HOSTS
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: ELASTICSEARCH_HOSTS
              optional: true
        - name: KIBANA_HOST
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: KIBANA_HOST
              optional: true
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: ELASTICSEARCH_USERNAME
              optional: true
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: heartbeat-logging
              key: ELASTICSEARCH_PASSWORD
              optional: true
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/heartbeat.yml
          readOnly: true
          subPath: heartbeat.yml
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: heartbeat-deployment-config
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: heartbeat-logging
subjects:
- kind: ServiceAccount
  name: heartbeat-logging
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: heartbeat-logging
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: heartbeat-logging
  labels:
    k8s-app: heartbeat-logging
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: heartbeat-logging
  namespace: kube-system
  labels:
    k8s-app: heartbeat-logging
---

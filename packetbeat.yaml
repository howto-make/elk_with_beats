---
apiVersion: v1
kind: ConfigMap
metadata:
  name: packetbeat-dynamic-config
  namespace: kube-system
  labels:
    k8s-app: packetbeat-dynamic
    kubernetes.io/cluster-service: "true"
data:
  packetbeat.yml: |-
    setup.dashboards.enabled: true
    setup.template.enabled: true
    setup.template.settings:
      index.number_of_shards: 2
    packetbeat.interfaces.device: any
    packetbeat.interfaces.internal_networks:
    - private

    packetbeat.protocols:

    - type: icmp

    - type: dhcpv4
      ports: [67, 68]

    - type: amqp
      ports: [5672]

    - type: dns
      ports: [53]
      include_authorities: true
      include_additionals: true

    - type: http
      ports: [80, 8000, 8080, 5000, 8002, 9200, 8081]

    - type: nfs
      ports: [2049]

    - type: mysql
      ports: [3306, 3307]

    - type: memcache
      ports: [11211]

    - type: redis
      ports: [6379]

    - type: pgsql
      ports: [5432]

    - type: thrift
      ports: [9090]

    - type: mongodb
      ports: [27017]

    - type: cassandra
      ports: [9042]

    - type: tls
      ports: [443, 993, 995, 5223, 8443, 8883, 9243]

    - type: sip
      ports: [5060]

      parse_authorization: true
      parse_body: true
      keep_original: true

    packetbeat.flows:
      timeout: 30s
      period: 10s
    processors:
      - add_cloud_metadata:
      - add_locale:
          format: offset    
      - add_kubernetes_metadata:
          host: ${HOSTNAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'
              # with version 7 of Packetbeat use the following line instead of the one above.
              #format: '%{[destination.ip]}:%{[destination.port]}'
    cloud.auth: ${ELASTIC_CLOUD_AUTH}
    cloud.id: ${ELASTIC_CLOUD_ID}

    output.elasticsearch:
      hosts: http://10.5.35.226:31335
      username: elastic
      password: changeme

    setup.kibana:
      host: http://10.5.35.226:31336
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: packetbeat-dynamic
  namespace: kube-system
  labels:
    k8s-app: packetbeat-dynamic
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: packetbeat-dynamic
  template:
    metadata:
      labels:
        k8s-app: packetbeat-dynamic
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: packetbeat-dynamic
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: packetbeat-dynamic
        image: docker.elastic.co/beats/packetbeat:6.2.0
        imagePullPolicy: IfNotPresent
        args: [
          "-c", "/etc/packetbeat.yml",
          "-e",
        ]
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: ELASTIC_CLOUD_ID
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: ELASTIC_CLOUD_ID
              optional: true
        - name: ELASTIC_CLOUD_AUTH
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: ELASTIC_CLOUD_AUTH
              optional: true
        - name: ELASTICSEARCH_HOSTS
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: ELASTICSEARCH_HOSTS
              optional: true
        - name: KIBANA_HOST
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: KIBANA_HOST
              optional: true
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: ELASTICSEARCH_USERNAME
              optional: true
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: packetbeat-dynamic
              key: ELASTICSEARCH_PASSWORD
              optional: true
        volumeMounts:
        - name: config
          mountPath: /etc/packetbeat.yml
          readOnly: true
          subPath: packetbeat.yml
        - name: data
          mountPath: /usr/share/packetbeat/data
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: packetbeat-dynamic-config
      - name: data
        emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: packetbeat-dynamic
subjects:
- kind: ServiceAccount
  name: packetbeat-dynamic
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: packetbeat-dynamic
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: packetbeat-dynamic
  labels:
    k8s-app: packetbeat-dynamic
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: packetbeat-dynamic
  namespace: kube-system
  labels:
    k8s-app: packetbeat-dynamic
---
